# This is the name of the workflow as it will appear in the "Actions" tab on GitHub.
name: Python Linter

# This section defines when the workflow should run.
on:
  # Run this workflow on every push to the 'main' branch.
  push:
    branches: [ "main" ]
  # Also run it on every pull request that targets the 'main' branch.
  pull_request:
    branches: [ "main" ]

# This section defines the "jobs" to be run. A workflow can have one or more jobs.
jobs:
  # We'll define a single job called "lint".
  lint:
    # This specifies the type of machine to run the job on. 'ubuntu-latest' is a standard choice.
    runs-on: ubuntu-latest
    
    # This section lists the individual steps the job will perform.
    steps:
      # Step 1: Check out the repository's code
      # This downloads your code onto the runner machine so the workflow can access it.
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up a Python environment
      # This installs Python onto the runner machine.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # We specify the Python version to use.

      # Step 3: Install the linter tool
      # This step uses pip to install 'ruff', our chosen linter.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      # Step 4: Run the linter
      # This is the key step. It runs the 'ruff check' command on all files in your repository.
      # If ruff finds any issues, this step will fail, and the workflow run will be marked as failed.
      - name: Run ruff linter
        run: |
          ruff check .
